# Generated by Django 5.2.3 on 2025-06-26 04:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Ej: Terapia Individual', max_length=200)),
                ('slug', models.SlugField(help_text='Versión amigable para URL, ej: terapia-individual', max_length=200, unique=True)),
                ('description', models.TextField(help_text='Descripción detallada del servicio.')),
                ('image', models.ImageField(blank=True, help_text='Imagen representativa del servicio.', null=True, upload_to='service_images/')),
                ('order', models.PositiveIntegerField(default=0, help_text='Para ordenar los servicios en la web.')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote', models.TextField(help_text='El texto del testimonio.')),
                ('author', models.CharField(help_text="Ej: 'Paciente de Terapia de Pareja'", max_length=100)),
                ('is_visible', models.BooleanField(default=True, help_text='Marcar para que se muestre en la web.')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('content', models.TextField()),
                ('featured_image', models.ImageField(blank=True, help_text='Imagen destacada para el artículo.', null=True, upload_to='blog_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('published', 'Publicado')], default='draft', max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(help_text='Biografía profesional de la psicóloga.')),
                ('philosophy', models.TextField(help_text='Enfoque y filosofía de trabajo.')),
                ('photo', models.ImageField(blank=True, help_text='Foto profesional de la psicóloga.', null=True, upload_to='profile_photos/')),
                ('professional_id', models.CharField(blank=True, help_text='Número de colegiada.', max_length=50)),
                ('user', models.OneToOneField(help_text='Asociar con un usuario de Django para la psicóloga', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
